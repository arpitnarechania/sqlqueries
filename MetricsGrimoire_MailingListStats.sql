CREATE TABLE mailing_lists ( mailing_list_url VARCHAR(255) NOT NULL, mailing_list_name VARCHAR(255), project_name VARCHAR(255), last_analysis TIMESTAMP, PRIMARY KEY(mailing_list_url) )
CREATE TABLE people ( email_address VARCHAR(255) NOT NULL, name VARCHAR(255), username VARCHAR(255), domain_name VARCHAR(255), top_level_domain VARCHAR(255), PRIMARY KEY(email_address) )
CREATE TABLE mailing_lists_people ( email_address VARCHAR(255) CHARACTER SET utf8 NOT NULL, mailing_list_url VARCHAR(255) CHARACTER SET utf8 NOT NULL, PRIMARY KEY(email_address, mailing_list_url), FOREIGN KEY(mailing_list_url) REFERENCES mailing_lists(mailing_list_url) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(email_address) REFERENCES people(email_address) ON DELETE CASCADE ON UPDATE CASCADE)
CREATE INDEX response ON messages (is_response_of);
CREATE TABLE people ( email_address VARCHAR(255) CHARACTER SET utf8 NOT NULL, name VARCHAR(255) CHARACTER SET utf8 NULL, username VARCHAR(255) CHARACTER SET utf8 NULL, domain_name VARCHAR(255) CHARACTER SET utf8 NULL, top_level_domain VARCHAR(255) CHARACTER SET utf8 NULL, PRIMARY KEY(email_address))
CREATE TABLE messages_people ( type_of_recipient VARCHAR(25) NOT NULL DEFAULT 'From' CHECK (type_of_recipient IN ('From', 'To', 'Cc')), mailing_list_url VARCHAR(255) NOT NULL, message_id VARCHAR(255) NOT NULL, email_address VARCHAR(255) NOT NULL, PRIMARY KEY(type_of_recipient, message_id, email_address) )
CREATE TABLE messages_people ( type_of_recipient ENUM('From','To','Cc') NOT NULL DEFAULT 'From', message_id VARCHAR(255) CHARACTER SET utf8 NOT NULL, mailing_list_url VARCHAR(255) CHARACTER SET utf8 NOT NULL, email_address VARCHAR(255) CHARACTER SET utf8 NOT NULL, PRIMARY KEY(type_of_recipient, message_id, mailing_list_url, email_address), INDEX message_id(message_id, mailing_list_url), FOREIGN KEY(message_id, mailing_list_url) REFERENCES messages(message_id, mailing_list_url) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(email_address) REFERENCES people(email_address) ON DELETE CASCADE ON UPDATE CASCADE)
CREATE INDEX m_id ON messages_people (message_id);
CREATE TABLE messages ( message_id VARCHAR(255) CHARACTER SET utf8 NOT NULL, mailing_list_url VARCHAR(255) CHARACTER SET utf8 NOT NULL, mailing_list VARCHAR(255) CHARACTER SET utf8 NULL, first_date DATETIME NULL, first_date_tz INTEGER(11) NULL, arrival_date DATETIME NULL, arrival_date_tz INTEGER(11) NULL, subject VARCHAR(1024) CHARACTER SET utf8 NULL, message_body MEDIUMTEXT CHARACTER SET utf8 NULL, is_response_of VARCHAR(255) CHARACTER SET utf8 NULL, mail_path TEXT CHARACTER SET utf8 NULL, PRIMARY KEY(message_id, mailing_list_url), INDEX response(is_response_of), FOREIGN KEY(mailing_list_url) REFERENCES mailing_lists(mailing_list_url) ON DELETE CASCADE ON UPDATE CASCADE)
CREATE TABLE messages ( message_ID VARCHAR(255) NOT NULL, mailing_list_url VARCHAR(255) NOT NULL, mailing_list VARCHAR(255), first_date TIMESTAMP, first_date_tz NUMERIC(11), arrival_date TIMESTAMP, arrival_date_tz NUMERIC(11), subject VARCHAR(255), message_body TEXT, is_response_of VARCHAR(255), mail_path TEXT, PRIMARY KEY(message_ID) )
CREATE TABLE compressed_files ( url varchar(255) CHARACTER SET utf8 NOT NULL, mailing_list_url varchar(255) CHARACTER SET utf8 not null, status enum('new','visited','failed') null, last_analysis datetime null, primary key(url), foreign key(mailing_list_url) references mailing_lists(mailing_list_url))
CREATE TABLE mailing_lists ( mailing_list_url VARCHAR(255) CHARACTER SET utf8 NOT NULL, mailing_list_name VARCHAR(255) CHARACTER SET utf8 NULL DEFAULT 'NULL', project_name VARCHAR(255) CHARACTER SET utf8 NULL DEFAULT 'NULL', last_analysis DATETIME NULL, PRIMARY KEY(mailing_list_url))
CREATE TABLE compressed_files ( url VARCHAR(255) NOT NULL, mailing_list_url VARCHAR(255) NOT NULL, status VARCHAR(25) CHECK (status IN ('new', 'visited', 'failed')), last_analysis TIMESTAMP, PRIMARY KEY(url) )
