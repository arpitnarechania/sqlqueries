select se from SubscriptionEntry se join fetch se.subscription join fetch se.feedEntry where se.id = ?1
select fe from FeedEntry fe where fe.feed.id = ?1
create table fetch_error ( fetch_error_id bigint generated by default as identity (start with 1), fetch_error_created_at timestamp not null, fetch_error_message VARCHAR(1000), fetch_error_feed_id bigint not null, primary key (fetch_error_id))
update Subscription set lastFeedEntryId = ? where id = ?
select st from SubscriptionTag st where st.name = ?1 and st.user.email = ?#{principal.username}
update Subscription set lastFeedEntryId = ? where id = ?
create index entry_title_idx on entry (entry_title);
select ep from ExclusionPattern ep join fetch ep.subscription where ep.subscription.id = ?1 and ep.pattern = ?2
create table user_feed ( user_feed_id bigint generated by default as identity (start with 1), user_feed_created_at timestamp, user_feed_sum integer, last_feed_entry bigint, user_feed_tag varchar(255), user_feed_title varchar(255), version bigint DEFAULT 0, user_feed_feed_id bigint not null, user_feed_user_id bigint not null, primary key (user_feed_id))
select se from SubscriptionEntry se join fetch se.subscription join fetch se.feedEntry where se.id = ?1 and se.subscription.user.email = ?#{principal.username}
create table exclusion_pattern ( id bigint generated by default as identity (start with 1), created_at timestamp, hit_count integer, pattern varchar(255), exclusion_pattern_user_feed_id bigint not null, primary key (id))
create index entry_url_idx on entry (entry_url);
create table entry ( entry_id bigint generated by default as identity (start with 1), entry_content LONGVARCHAR, entry_created_at timestamp, entry_guid VARCHAR(1000), entry_title VARCHAR(1000), entry_url VARCHAR(1000), entry_feed_id bigint not null, primary key (entry_id))
select count(fe) from FeedEntry fe where (fe.title = ?1 or fe.guid = ?2 or fe.url = ?3) and fe.feed.id = ?4
select st from SubscriptionTag st where st.id = ?1 and st.user.email = ?#{principal.username}
select ep from ExclusionPattern ep join fetch ep.subscription where ep.subscription.id = ?1
select se from SubscriptionEntry se join fetch se.feedEntry join fetch se.subscription",countQuery = "select count(se) from SubscriptionEntry se
create table user ( user_id bigint generated by default as identity (start with 1), user_email varchar(255), user_password varchar(255), user_role varchar(255), primary key (user_id))
create table user_feed_tag ( user_feed_tag_id bigint generated by default as identity (start with 1), user_feed_tag_name varchar(255) not null, user_feed_tag_color varchar(255), user_feed_tag_created_at timestamp, user_feed_tag_user_id bigint not null, primary key (user_feed_tag_id))
create index entry_guid_idx on entry (entry_guid);
select ep from ExclusionPattern ep join fetch ep.subscription where ep.id = ?1 and ep.subscription.id = ?2 and ep.subscription.user.email = ?#{principal.username}
select f from Feed f where f.id not in (select s.feed.id from Subscription s where s.feed.id = f.id)
select s from Subscription s where s.user.email = ?#{principal.username} and s.feed.url = ?1
create table user_feed_entry ( user_feed_entry_id bigint generated by default as identity (start with 1), user_feed_entry_created_at timestamp, user_feed_entry_is_read boolean, user_feed_entry_tag VARCHAR(1000), user_feed_entry_entry_id bigint not null, user_feed_entry_user_feed_id bigint not null, primary key (user_feed_entry_id))
create table feed ( feed_id bigint generated by default as identity (start with 1), feed_created_at timestamp, feed_fetched integer, feed_last_modified varchar(255), result_size_per_fetch integer, feed_title VARCHAR(1000) not null, feed_url VARCHAR(1000), version bigint DEFAULT 0, primary key (feed_id))
update ExclusionPattern set hitCount = hitCount +1 where id = ?
select s from Subscription s join fetch s.feed left join fetch s.subscriptionTag where s.id = ?1 and s.user.email = ?#{principal.username}
select s from Subscription s join fetch s.feed left join fetch s.subscriptionTag where s.user.email = ?#{principal.username} 
select fe from FeedEntry fe where fe.id > ?1 and fe.feed.id = ?2 order by fe.id asc
select u from User u where u.email = ?#{principal.username}
