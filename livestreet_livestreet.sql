SELECT * FROM " . Config::Get('db.table.comment') . 
SELECT * FROM ' . Config::Get('db.table.topic_type') . ' WHERE code = ?';
CREATE TABLE IF NOT EXISTS `prefix_property_select` ( `id` int(11) NOT NULL AUTO_INCREMENT, `property_id` int(11) NOT NULL, `target_type` varchar(50) NOT NULL, `value` varchar(250) NOT NULL, `sort` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `property_id` (`property_id`), KEY `target_type` (`target_type`), KEY `sort` (`sort`))
CREATE TABLE IF NOT EXISTS `prefix_property_select` ( `id` int(11) unsigned NOT NULL, `property_id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `value` varchar(250) NOT NULL, `sort` int(11) NOT NULL DEFAULT '0')
CREATE TABLE IF NOT EXISTS `prefix_media` ( `id` int(11) NOT NULL AUTO_INCREMENT, `user_id` int(11) DEFAULT NULL, `type` int(11) NOT NULL, `file_path` varchar(500) NOT NULL, `file_name` varchar(500) NOT NULL, `file_size` int(11) NOT NULL, `width` int(11) NOT NULL, `height` int(11) NOT NULL, `date_add` datetime NOT NULL, `data` text NOT NULL, PRIMARY KEY (`id`), KEY `user_id` (`user_id`), KEY `type` (`type`), KEY `file_size` (`file_size`), KEY `width` (`width`), KEY `height` (`height`), KEY `date_add` (`date_add`))
SELECT * FROM ' . Config::Get('db.table.stream_user_type') . ' WHERE user_id = ?d AND event_type = ?';
CREATE TABLE IF NOT EXISTS `prefix_plugin_version` ( `id` int(11) unsigned NOT NULL, `code` varchar(50) NOT NULL, `version` varchar(50) NOT NULL, `date_update` datetime NOT NULL)
SELECT					*				FROM					" . Config::Get('db.table.geo_target') . 
SELECT					*							 				FROM 					" . Config::Get('db.table.vote') . 
CREATE TABLE IF NOT EXISTS `prefix_geo_country` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name_ru` varchar(50) NOT NULL, `name_en` varchar(50) NOT NULL, `code` varchar(5) NOT NULL, `sort` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `sort` (`sort`), KEY `name_ru` (`name_ru`), KEY `name_en` (`name_en`), KEY `code` (`code`))
CREATE TABLE IF NOT EXISTS `prefix_plugin_version` ( `id` int(11) NOT NULL AUTO_INCREMENT, `code` varchar(50) NOT NULL, `version` varchar(50) NOT NULL, `date_update` datetime NOT NULL, PRIMARY KEY (`id`), KEY `code` (`code`), KEY `version` (`version`))
CREATE TABLE IF NOT EXISTS `prefix_stream_event` ( `id` int(11) unsigned NOT NULL, `event_type` varchar(100) NOT NULL, `target_id` int(11) NOT NULL, `user_id` int(11) unsigned NOT NULL, `date_added` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `publish` tinyint(1) NOT NULL DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_poll_answer` ( `id` int(11) unsigned NOT NULL, `poll_id` int(11) unsigned NOT NULL, `title` varchar(500) CHARACTER SET utf8 NOT NULL, `count_vote` int(11) NOT NULL DEFAULT '0', `date_create` datetime NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_user_complaint` ( `id` int(11) unsigned NOT NULL, `target_user_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `type` varchar(50) NOT NULL, `text` text NOT NULL, `date_add` datetime NOT NULL, `state` tinyint(4) NOT NULL DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_category` ( `id` int(11) unsigned NOT NULL, `pid` int(11) unsigned DEFAULT NULL, `type_id` int(11) unsigned NOT NULL, `title` varchar(250) NOT NULL, `description` text NOT NULL, `url` varchar(250) NOT NULL, `url_full` varchar(250) NOT NULL, `date_create` datetime NOT NULL, `order` int(11) NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', `count_target` int(11) NOT NULL DEFAULT '0', `data` varchar(500) NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_geo_region` ( `id` int(11) NOT NULL AUTO_INCREMENT, `country_id` int(11) NOT NULL, `name_ru` varchar(50) NOT NULL, `name_en` varchar(50) NOT NULL, `sort` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `sort` (`sort`), KEY `country_id` (`country_id`), KEY `name_ru` (`name_ru`), KEY `name_en` (`name_en`))
CREATE TABLE IF NOT EXISTS `prefix_topic_read` ( `topic_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `date_read` datetime NOT NULL, `comment_count_last` int(10) unsigned NOT NULL DEFAULT '0', `comment_id_last` int(11) NOT NULL DEFAULT '0')
CREATE TABLE IF NOT EXISTS `prefix_category_type` ( `id` int(11) NOT NULL AUTO_INCREMENT, `target_type` varchar(50) NOT NULL, `title` varchar(200) NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', `date_create` datetime NOT NULL, `date_update` datetime DEFAULT NULL, `params` text NOT NULL, PRIMARY KEY (`id`), KEY `title` (`title`), KEY `state` (`state`), KEY `target_type` (`target_type`))
CREATE TABLE IF NOT EXISTS `prefix_favourite_tag` ( `user_id` int(10) unsigned NOT NULL, `target_id` int(11) NOT NULL, `target_type` varchar(50) NOT NULL, `is_user` tinyint(1) NOT NULL DEFAULT '0', `text` varchar(50) NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_property_value_tag` ( `id` int(11) NOT NULL AUTO_INCREMENT, `property_id` int(11) NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `text` varchar(50) NOT NULL, PRIMARY KEY (`id`), KEY `target_type` (`target_type`), KEY `target_id` (`target_id`), KEY `text` (`text`), KEY `property_id` (`property_id`))
CREATE TABLE IF NOT EXISTS `prefix_topic_type` ( `id` int(11) unsigned NOT NULL, `name` varchar(250) NOT NULL, `name_many` varchar(250) NOT NULL, `code` varchar(50) NOT NULL, `allow_remove` tinyint(1) NOT NULL DEFAULT '0', `date_create` datetime NOT NULL, `state` tinyint(4) NOT NULL DEFAULT '1', `sort` int(11) NOT NULL DEFAULT '0', `params` text)
SELECT * FROM " . Config::Get('db.table.user_note') . " WHERE id = ?d 
SELECT * FROM prefix_user LIMIT {$iLimitStart},{$iLimitCount}
CREATE TABLE IF NOT EXISTS `prefix_poll_vote` ( `id` int(11) NOT NULL AUTO_INCREMENT, `poll_id` int(11) NOT NULL, `answer_id` int(11) DEFAULT NULL, `user_id` int(11) NOT NULL, `date_create` datetime NOT NULL, PRIMARY KEY (`id`), KEY `poll_id` (`poll_id`), KEY `answer_id` (`answer_id`), KEY `user_id` (`user_id`))
CREATE TABLE IF NOT EXISTS `prefix_property` ( `id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `type` varchar(50) NOT NULL DEFAULT 'text', `code` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, `description` varchar(500) DEFAULT NULL, `date_create` datetime NOT NULL, `sort` int(11) NOT NULL DEFAULT '0', `validate_rules` varchar(500) DEFAULT NULL, `params` text)
CREATE TABLE IF NOT EXISTS `prefix_storage` ( `id` int(11) unsigned NOT NULL, `key` varchar(50) NOT NULL, `value` mediumtext NOT NULL, `instance` varchar(50) NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_wall` ( `id` int(11) unsigned NOT NULL, `pid` int(11) unsigned DEFAULT NULL, `wall_user_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `count_reply` int(11) NOT NULL DEFAULT '0', `last_reply` varchar(100) NOT NULL, `date_add` datetime NOT NULL, `ip` varchar(40) NOT NULL, `text` text NOT NULL)
SELECT * FROM prefix_rbac_role_user WHERE user_id = '{$aUser['user_id']}' and role_id = 2 
SELECT min(topic_date_publish) FROM ' . Config::Get('db.table.topic') . ' WHERE topic_date_publish > ? and topic_publish = 1';
CREATE TABLE IF NOT EXISTS `prefix_media_target` ( `id` int(11) unsigned NOT NULL, `media_id` int(11) unsigned NOT NULL, `target_id` int(11) DEFAULT NULL, `target_type` varchar(50) NOT NULL, `target_tmp` varchar(50) DEFAULT NULL, `date_add` datetime NOT NULL, `is_preview` tinyint(1) NOT NULL DEFAULT '0', `data` text NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_user_note` ( `id` int(11) unsigned NOT NULL, `target_user_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `text` text NOT NULL, `date_add` datetime NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_reminder` ( `reminder_code` varchar(32) NOT NULL, `user_id` int(11) unsigned NOT NULL, `reminder_date_add` datetime NOT NULL, `reminder_date_used` datetime DEFAULT NULL, `reminder_date_expire` datetime NOT NULL, `reminde_is_used` tinyint(1) unsigned NOT NULL DEFAULT '0')
CREATE TABLE IF NOT EXISTS `prefix_invite_code` ( `id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned DEFAULT NULL, `code` varchar(32) NOT NULL, `date_create` datetime NOT NULL, `date_expired` datetime DEFAULT NULL, `count_allow_use` int(11) NOT NULL DEFAULT '1', `count_use` int(11) NOT NULL DEFAULT '0', `active` tinyint(1) NOT NULL DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_rbac_user_role` ( `id` int(11) NOT NULL AUTO_INCREMENT, `user_id` int(11) unsigned NOT NULL, `role_id` int(11) NOT NULL, `date_create` datetime NOT NULL, PRIMARY KEY (`id`), KEY `user_id` (`user_id`), KEY `role_id` (`role_id`), KEY `date_create` (`date_create`))
SELECT * FROM " . Config::Get('db.table.user_note') . " WHERE target_user_id = ?d and user_id = ?d 
SELECT				*			FROM				" . Config::Get('db.table.topic_type') . 
CREATE TABLE IF NOT EXISTS `prefix_property_value_tag` ( `id` int(11) unsigned NOT NULL, `property_id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `text` varchar(50) NOT NULL)
SELECT * FROM ' . Config::Get('db.table.topic_type') . ' WHERE id = ?d';
SELECT					comment_id 									FROM 					" . Config::Get('db.table.comment') . 
CREATE TABLE IF NOT EXISTS `prefix_blog_user` ( `blog_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `user_role` int(3) DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_userfeed_subscribe` ( `user_id` int(11) unsigned NOT NULL, `subscribe_type` tinyint(4) NOT NULL, `target_id` int(11) NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_talk_user` ( `talk_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `date_last` datetime DEFAULT NULL, `comment_id_last` int(11) unsigned NOT NULL DEFAULT '0', `comment_count_new` int(11) NOT NULL DEFAULT '0', `talk_user_active` tinyint(1) DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_property_value` ( `id` int(11) NOT NULL AUTO_INCREMENT, `property_id` int(11) NOT NULL, `property_type` varchar(30) NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `value_int` int(11) DEFAULT NULL, `value_float` float(11,2) DEFAULT NULL, `value_varchar` varchar(250) DEFAULT NULL, `value_text` text, `data` text, PRIMARY KEY (`id`), KEY `property_id` (`property_id`), KEY `target_type` (`target_type`), KEY `target_id` (`target_id`), KEY `value_int` (`value_int`), KEY `property_type` (`property_type`), KEY `value_float` (`value_float`), KEY `value_varchar` (`value_varchar`))
CREATE TABLE IF NOT EXISTS `prefix_category_target` ( `id` int(11) unsigned NOT NULL, `category_id` int(11) unsigned NOT NULL, `type_id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `date_create` datetime NOT NULL)
SELECT				user_id			FROM				" . Config::Get('db.table.user') . 
CREATE TABLE IF NOT EXISTS `prefix_media` ( `id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned DEFAULT NULL, `type` int(11) NOT NULL, `target_type` varchar(50) NOT NULL, `file_path` varchar(500) NOT NULL, `file_name` varchar(500) NOT NULL, `file_size` int(11) NOT NULL, `width` int(11) NOT NULL, `height` int(11) NOT NULL, `date_add` datetime NOT NULL, `data` text NOT NULL)
SELECT blog_id FROM " . Config::Get('db.table.blog') . " WHERE blog_title = ? 
CREATE TABLE IF NOT EXISTS `prefix_rbac_role` ( `id` int(11) NOT NULL AUTO_INCREMENT, `pid` int(11) DEFAULT NULL, `code` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, `date_create` datetime NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', PRIMARY KEY (`id`), KEY `pid` (`pid`), KEY `state` (`state`), KEY `date_create` (`date_create`), KEY `code` (`code`))
CREATE TABLE IF NOT EXISTS `prefix_poll_answer` ( `id` int(11) NOT NULL AUTO_INCREMENT, `poll_id` int(11) NOT NULL, `title` varchar(500) CHARACTER SET utf8 NOT NULL, `count_vote` int(11) NOT NULL DEFAULT '0', `date_create` datetime NOT NULL, PRIMARY KEY (`id`), KEY `poll_id` (`poll_id`), KEY `count_vote` (`count_vote`))
SELECT					*				FROM					" . Config::Get('db.table.friend') . 
SELECT					*				FROM 					" . Config::Get('db.table.comment') . 
CREATE TABLE IF NOT EXISTS `prefix_rbac_group` ( `id` int(11) unsigned NOT NULL, `code` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, `date_create` datetime NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_stream_subscribe` ( `user_id` int(11) unsigned NOT NULL, `target_user_id` int(11) unsigned NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_property_value` ( `id` int(11) unsigned NOT NULL, `property_id` int(11) unsigned NOT NULL, `property_type` varchar(30) NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `value_int` int(11) DEFAULT NULL, `value_float` float(11,2) DEFAULT NULL, `value_varchar` varchar(250) DEFAULT NULL, `value_date` datetime DEFAULT NULL, `value_text` text, `data` text)
SELECT					comment_id					FROM 					" . Config::Get('db.table.comment_online') . 
CREATE TABLE IF NOT EXISTS `prefix_category_target` ( `id` int(11) NOT NULL AUTO_INCREMENT, `category_id` int(11) NOT NULL, `type_id` int(11) NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `date_create` datetime NOT NULL, PRIMARY KEY (`id`), KEY `target_type` (`target_type`), KEY `target_id` (`target_id`), KEY `category_id` (`category_id`), KEY `type_id` (`type_id`))
SELECT					comment_id 								FROM 					" . Config::Get('db.table.comment') . 
CREATE TABLE IF NOT EXISTS `prefix_poll` ( `id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) DEFAULT NULL, `target_tmp` varchar(50) DEFAULT NULL, `title` varchar(500) NOT NULL, `is_guest_allow` tinyint(1) NOT NULL DEFAULT '0', `is_guest_check_ip` tinyint(1) NOT NULL DEFAULT '0', `count_answer_max` tinyint(4) NOT NULL DEFAULT '1', `count_vote` int(11) NOT NULL DEFAULT '0', `count_abstain` int(11) NOT NULL DEFAULT '0', `date_create` datetime NOT NULL, `date_end` datetime DEFAULT NULL)
CREATE TABLE IF NOT EXISTS `prefix_friend` ( `user_from` int(11) unsigned NOT NULL DEFAULT '0', `user_to` int(11) unsigned NOT NULL DEFAULT '0', `status_from` int(4) NOT NULL, `status_to` int(4) NOT NULL)
SELECT event_type FROM ' . Config::Get('db.table.stream_user_type') . ' WHERE user_id = ?d';
CREATE TABLE IF NOT EXISTS `prefix_plugin_migration` ( `id` int(11) unsigned NOT NULL, `code` varchar(50) NOT NULL, `version` varchar(50) NOT NULL, `date_create` datetime NOT NULL, `file` varchar(500) NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_user_changemail` ( `id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `date_add` datetime NOT NULL, `date_used` datetime DEFAULT NULL, `date_expired` datetime NOT NULL, `mail_from` varchar(50) NOT NULL, `mail_to` varchar(50) NOT NULL, `code_from` varchar(32) NOT NULL, `code_to` varchar(32) NOT NULL, `confirm_from` tinyint(1) NOT NULL DEFAULT '0', `confirm_to` tinyint(1) NOT NULL DEFAULT '0')
SELECT				text			FROM				" . Config::Get('db.table.property_value_tag') . 
SELECT * FROM prefix_topic_question_vote WHERE topic_id = '{$aTopic['topic_id']}' AND answer = -1 
SELECT target_user_id FROM ' . Config::Get('db.table.stream_subscribe') . ' WHERE user_id = ?d';
CREATE TABLE IF NOT EXISTS `prefix_talk_blacklist` ( `user_id` int(10) unsigned NOT NULL, `user_target_id` int(10) unsigned NOT NULL)
SELECT * FROM ' . Config::Get('db.table.user_field') . ' WHERE 1=1 { and type IN (?a) }';
SELECT subscribe_type, target_id FROM ' . Config::Get('db.table.userfeed_subscribe') . ' WHERE user_id = ?d';
CREATE TABLE IF NOT EXISTS `prefix_notify_task` ( `notify_task_id` int(10) unsigned NOT NULL, `user_login` varchar(30) DEFAULT NULL, `user_mail` varchar(50) DEFAULT NULL, `notify_subject` varchar(200) DEFAULT NULL, `notify_text` text, `notify_text_alt` text DEFAULT NULL, `date_created` datetime DEFAULT NULL, `notify_task_status` tinyint(2) unsigned DEFAULT NULL)
CREATE TABLE IF NOT EXISTS `prefix_property_value_select` ( `id` int(11) unsigned NOT NULL, `property_id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `select_id` int(11) unsigned NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_media_target` ( `id` int(11) NOT NULL AUTO_INCREMENT, `media_id` int(11) NOT NULL, `target_id` int(11) DEFAULT NULL, `target_type` varchar(50) NOT NULL, `target_tmp` varchar(50) DEFAULT NULL, `date_add` datetime NOT NULL, PRIMARY KEY (`id`), KEY `media_id` (`media_id`), KEY `target_id` (`target_id`), KEY `target_type` (`target_type`), KEY `target_tmp` (`target_tmp`), KEY `date_add` (`date_add`))
SELECT id FROM ' . Config::Get('db.table.user_field') . ' WHERE id = ?d';
CREATE TABLE IF NOT EXISTS `prefix_invite_use` (`id` int(11) NOT NULL, `type` tinyint(4) NOT NULL DEFAULT '1', `code_id` int(11) DEFAULT NULL, `from_user_id` int(11) DEFAULT NULL, `to_user_id` int(11) NOT NULL, `date_create` datetime NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_category_type` ( `id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `title` varchar(200) NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', `date_create` datetime NOT NULL, `date_update` datetime DEFAULT NULL, `params` text NOT NULL)
SELECT * FROM					" . Config::Get('db.table.stream_event') . 
CREATE TABLE IF NOT EXISTS `prefix_comment_online` ( `comment_online_id` int(11) unsigned NOT NULL, `target_id` int(11) unsigned DEFAULT NULL, `target_type` varchar(50) NOT NULL DEFAULT 'topic', `target_parent_id` int(11) NOT NULL DEFAULT '0', `comment_id` int(11) unsigned NOT NULL)
SELECT id FROM ' . Config::Get('db.table.user_field') . ' WHERE name = ? {AND id != ?d}';
SELECT * FROM prefix_blog WHERE blog_avatar <> '' and blog_avatar <> '0' and blog_avatar IS NOT NULL LIMIT {$iLimitStart},{$iLimitCount}
CREATE TABLE IF NOT EXISTS `prefix_property` ( `id` int(11) NOT NULL AUTO_INCREMENT, `target_type` varchar(50) NOT NULL, `type` enum('int','float','varchar','text','checkbox','select','tags','video_link') NOT NULL DEFAULT 'text', `code` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, `date_create` datetime NOT NULL, `sort` int(11) NOT NULL, `validate_rules` varchar(500) DEFAULT NULL, `params` text, PRIMARY KEY (`id`), KEY `target_type` (`target_type`), KEY `code` (`code`), KEY `type` (`type`), KEY `date_create` (`date_create`), KEY `sort` (`sort`))
SELECT target_type FROM " . Config::Get('db.table.comment') . 
SELECT * FROM " . Config::Get('db.table.user_changemail') . " WHERE code_to = ? 
CREATE TABLE IF NOT EXISTS `prefix_geo_target` ( `geo_type` varchar(20) NOT NULL, `geo_id` int(11) NOT NULL, `target_type` varchar(20) NOT NULL, `target_id` int(11) NOT NULL, `country_id` int(11) DEFAULT NULL, `region_id` int(11) DEFAULT NULL, `city_id` int(11) DEFAULT NULL, PRIMARY KEY (`geo_type`,`geo_id`,`target_type`,`target_id`), KEY `target_type` (`target_type`,`target_id`), KEY `country_id` (`country_id`), KEY `region_id` (`region_id`), KEY `city_id` (`city_id`))
CREATE TABLE IF NOT EXISTS `prefix_rbac_role_user` ( `id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `role_id` int(11) unsigned NOT NULL, `date_create` datetime NOT NULL)
SELECT					*				FROM					" . Config::Get('db.table.wall') . 
CREATE TABLE IF NOT EXISTS `prefix_rbac_role_permission` ( `id` int(11) unsigned NOT NULL, `role_id` int(11) unsigned NOT NULL, `permission_id` int(11) unsigned NOT NULL, `date_create` datetime NOT NULL)
SELECT					comment_id				FROM 					" . Config::Get('db.table.comment') . 
CREATE TABLE IF NOT EXISTS `prefix_user_complaint` (	`id` int(11) NOT NULL AUTO_INCREMENT,	`target_user_id` int(11) unsigned NOT NULL,	`user_id` int(11) unsigned NOT NULL,	`type` varchar(50) NOT NULL,	`text` text NOT NULL,	`date_add` datetime NOT NULL,	PRIMARY KEY (`id`),	KEY `user_id` (`user_id`),	KEY `target_user_id` (`target_user_id`),	KEY `type` (`type`))
SELECT id FROM ' . Config::Get('db.table.user_field') . ' WHERE name =?)';
CREATE TABLE IF NOT EXISTS `prefix_poll` ( `id` int(11) NOT NULL AUTO_INCREMENT, `user_id` int(11) NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) DEFAULT NULL, `target_tmp` varchar(50) DEFAULT NULL, `title` varchar(500) NOT NULL, `count_answer_max` tinyint(4) NOT NULL DEFAULT '1', `count_vote` int(11) NOT NULL DEFAULT '0', `count_abstain` int(11) NOT NULL DEFAULT '0', `date_create` datetime NOT NULL, `date_end` datetime DEFAULT NULL, PRIMARY KEY (`id`), KEY `user_id` (`user_id`), KEY `target_type_target_id` (`target_type`,`target_id`), KEY `target_tmp` (`target_tmp`), KEY `count_vote` (`count_vote`), KEY `count_abstain` (`count_abstain`))
CREATE TABLE IF NOT EXISTS `prefix_rbac_permission` ( `id` int(11) NOT NULL AUTO_INCREMENT, `code` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, `msg_error` varchar(250) NOT NULL, `date_create` datetime NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', PRIMARY KEY (`id`), KEY `code` (`code`), KEY `date_create` (`date_create`), KEY `state` (`state`))
CREATE TABLE IF NOT EXISTS `prefix_storage` ( `id` int(11) NOT NULL AUTO_INCREMENT, `key` varchar(50) NOT NULL, `value` mediumtext NOT NULL, `instance` varchar(50) NOT NULL, PRIMARY KEY (`id`), UNIQUE KEY `key_instance` (`key`,`instance`), KEY `instance` (`instance`))
CREATE TABLE IF NOT EXISTS `prefix_user_field_value` ( `user_id` int(11) unsigned NOT NULL, `field_id` int(11) unsigned DEFAULT NULL, `value` varchar(255) DEFAULT NULL)
CREATE TABLE IF NOT EXISTS `prefix_topic_type` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(250) NOT NULL, `name_many` varchar(250) NOT NULL, `code` varchar(50) NOT NULL, `allow_remove` tinyint(1) NOT NULL DEFAULT '0', `date_create` datetime NOT NULL, `state` tinyint(4) NOT NULL DEFAULT '1', `params` text, PRIMARY KEY (`id`), KEY `code` (`code`), KEY `state` (`state`))
SELECT					*								FROM 					" . Config::Get('db.table.comment') . 
SELECT					*				FROM					" . Config::Get('db.table.geo_region') . 
SELECT					*							 				FROM 					" . Config::Get('db.table.blog') . 
CREATE TABLE IF NOT EXISTS `prefix_rbac_permission` ( `id` int(11) unsigned NOT NULL, `group_id` int(11) unsigned DEFAULT NULL, `code` varchar(50) NOT NULL, `plugin` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, `msg_error` varchar(250) DEFAULT NULL, `date_create` datetime NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_topic_content` ( `topic_id` int(11) unsigned NOT NULL, `topic_text` longtext NOT NULL, `topic_text_short` text NOT NULL, `topic_text_source` longtext NOT NULL, `topic_extra` text NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_stream_user_type` ( `user_id` int(11) unsigned NOT NULL, `event_type` varchar(100) DEFAULT NULL)
SELECT					comment_id				FROM					" . Config::Get('db.table.comment') . 
SELECT					*				FROM					" . Config::Get('db.table.user_note') . 
SELECT * FROM prefix_topic_photo WHERE topic_id = '{$aTopic['topic_id']}' 
CREATE TABLE IF NOT EXISTS `prefix_cron_task` ( `id` int(11) unsigned NOT NULL, `title` varchar(500) NOT NULL, `method` varchar(500) NOT NULL, `plugin` varchar(50) NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', `count_run` int(11) NOT NULL DEFAULT '0', `period_run` int(11) NOT NULL, `date_create` datetime NOT NULL, `date_run_last` datetime DEFAULT NULL, `time_start` time DEFAULT NULL, `time_end` time DEFAULT NULL)
CREATE TABLE IF NOT EXISTS `prefix_invite_use` ( `id` int(11) unsigned NOT NULL, `type` tinyint(4) NOT NULL DEFAULT '1', `code_id` int(11) unsigned DEFAULT NULL, `from_user_id` int(11) unsigned DEFAULT NULL, `to_user_id` int(11) unsigned NOT NULL, `date_create` datetime NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_subscribe` ( `id` int(11) unsigned NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` varchar(50) DEFAULT NULL, `user_id` int(11) unsigned DEFAULT NULL, `mail` varchar(50) NOT NULL, `date_add` datetime NOT NULL, `date_remove` datetime DEFAULT NULL, `ip` varchar(40) NOT NULL, `key` varchar(32) DEFAULT NULL, `status` tinyint(1) NOT NULL DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_poll_vote` ( `id` int(11) unsigned NOT NULL, `poll_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned DEFAULT NULL, `guest_key` varchar(32) DEFAULT NULL, `ip` varchar(40) NOT NULL, `answers` varchar(500) NOT NULL, `date_create` datetime NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_rbac_group` ( `id` int(11) NOT NULL AUTO_INCREMENT, `code` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, PRIMARY KEY (`id`), KEY `code` (`code`))
CREATE TABLE IF NOT EXISTS `prefix_geo_city` ( `id` int(11) NOT NULL AUTO_INCREMENT, `country_id` int(11) NOT NULL, `region_id` int(11) NOT NULL, `name_ru` varchar(50) NOT NULL, `name_en` varchar(50) NOT NULL, `sort` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `sort` (`sort`), KEY `country_id` (`country_id`), KEY `region_id` (`region_id`), KEY `name_ru` (`name_ru`), KEY `name_en` (`name_en`))
CREATE TABLE IF NOT EXISTS `prefix_invite_code` (`id` int(11) NOT NULL, `user_id` int(11) DEFAULT NULL, `code` varchar(32) NOT NULL, `date_create` datetime NOT NULL, `date_expired` datetime DEFAULT NULL, `count_allow_use` int(11) NOT NULL DEFAULT '1', `count_use` int(11) NOT NULL DEFAULT '0', `active` tinyint(1) NOT NULL DEFAULT '1')
CREATE TABLE IF NOT EXISTS `prefix_favourite` ( `user_id` int(11) unsigned NOT NULL, `target_id` int(11) unsigned DEFAULT NULL, `target_type` varchar(50) DEFAULT 'topic', `target_publish` tinyint(1) DEFAULT '1', `tags` varchar(250) NOT NULL)
SELECT					id				FROM					" . Config::Get('db.table.wall') . 
SELECT			user_id			FROM				" . Config::Get('db.table.user') . 
SELECT topic_id FROM " . Config::Get('db.table.topic') . 
SELECT * FROM prefix_user_administrator 
CREATE TABLE IF NOT EXISTS `prefix_blog` ( `blog_id` int(11) unsigned NOT NULL, `user_owner_id` int(11) unsigned NOT NULL, `blog_title` varchar(200) NOT NULL, `blog_description` text NOT NULL, `blog_type` varchar(50) DEFAULT 'personal', `blog_date_add` datetime NOT NULL, `blog_date_edit` datetime DEFAULT NULL, `blog_rating` float(9,3) NOT NULL DEFAULT '0.000', `blog_count_vote` int(11) unsigned NOT NULL DEFAULT '0', `blog_count_user` int(11) unsigned NOT NULL DEFAULT '0', `blog_count_topic` int(10) unsigned NOT NULL DEFAULT '0', `blog_limit_rating_topic` float(9,3) NOT NULL DEFAULT '0.000', `blog_url` varchar(200) DEFAULT NULL, `blog_avatar` varchar(250) DEFAULT NULL, `blog_skip_index` tinyint(1) NOT NULL DEFAULT '0')
SELECT					*				FROM					" . Config::Get('db.table.subscribe') . 
CREATE TABLE IF NOT EXISTS `prefix_cron_task` ( `id` int(11) NOT NULL AUTO_INCREMENT, `title` varchar(500) NOT NULL, `method` varchar(500) NOT NULL, `plugin` varchar(50) NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', `count_run` int(11) NOT NULL DEFAULT '0', `period_run` int(11) NOT NULL, `date_create` datetime NOT NULL, `date_run_last` datetime DEFAULT NULL, PRIMARY KEY (`id`), KEY `count_run` (`count_run`), KEY `state` (`state`), KEY `plugin` (`plugin`), KEY `method` (`method`(255)), KEY `period_run` (`period_run`))
SELECT target_id FROM " . Config::Get('db.table.comment') . 
SELECT * FROM prefix_topic ORDER BY topic_id asc LIMIT {$iLimitStart},{$iLimitCount}
CREATE TABLE IF NOT EXISTS `prefix_rbac_role` ( `id` int(11) unsigned NOT NULL, `pid` int(11) unsigned DEFAULT NULL, `code` varchar(50) NOT NULL, `title` varchar(250) NOT NULL, `date_create` datetime NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1')
SELECT					comment_id 				FROM 					" . Config::Get('db.table.comment') . 
CREATE TABLE IF NOT EXISTS `prefix_property_value_select` ( `id` int(11) NOT NULL AUTO_INCREMENT, `property_id` int(11) NOT NULL, `target_type` varchar(50) NOT NULL, `target_id` int(11) NOT NULL, `select_id` int(11) NOT NULL, PRIMARY KEY (`id`), KEY `target_type` (`target_type`), KEY `target_id` (`target_id`), KEY `property_id` (`property_id`), KEY `select_id` (`select_id`))
SELECT					*				FROM					" . Config::Get('db.table.reminder') . 
CREATE TABLE IF NOT EXISTS `prefix_vote` ( `target_id` int(11) unsigned NOT NULL DEFAULT '0', `target_type` varchar(50) NOT NULL DEFAULT 'topic', `user_voter_id` int(11) unsigned NOT NULL, `vote_direction` tinyint(2) DEFAULT '0', `vote_value` float(9,3) NOT NULL DEFAULT '0.000', `vote_date` datetime NOT NULL, `vote_ip` varchar(40) NOT NULL DEFAULT '')
CREATE TABLE IF NOT EXISTS `prefix_plugin_migration` ( `id` int(11) NOT NULL AUTO_INCREMENT, `code` varchar(50) NOT NULL, `version` varchar(50) NOT NULL, `date_create` datetime NOT NULL, `file` varchar(500) NOT NULL, PRIMARY KEY (`id`), KEY `file` (`file`(255)), KEY `code` (`code`), KEY `version` (`version`))
CREATE TABLE IF NOT EXISTS `prefix_talk` ( `talk_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `talk_title` varchar(200) NOT NULL, `talk_text` text NOT NULL, `talk_date` datetime NOT NULL, `talk_date_last` datetime NOT NULL, `talk_user_id_last` int(11) NOT NULL, `talk_user_ip` varchar(40) NOT NULL, `talk_comment_id_last` int(11) DEFAULT NULL, `talk_count_comment` int(11) NOT NULL DEFAULT '0')
SELECT * FROM prefix_topic_question_vote WHERE topic_id = '{$aTopic['topic_id']}' AND answer = '{$iAnswerIdOld}' 
CREATE TABLE IF NOT EXISTS `prefix_rbac_role_permission` ( `id` int(11) NOT NULL AUTO_INCREMENT, `role_id` int(11) NOT NULL, `permission_id` int(11) NOT NULL, `date_create` datetime NOT NULL, PRIMARY KEY (`id`), KEY `role_id` (`role_id`), KEY `permission_id` (`permission_id`), KEY `date_create` (`date_create`))
SELECT					*				FROM					" . Config::Get('db.table.geo_country') . 
SELECT					*				FROM					" . Config::Get('db.table.geo_city') . 
CREATE TABLE IF NOT EXISTS `prefix_property_target` ( `id` int(11) NOT NULL AUTO_INCREMENT, `type` varchar(50) NOT NULL, `date_create` datetime NOT NULL, `date_update` datetime DEFAULT NULL, `state` tinyint(4) NOT NULL DEFAULT '1', `params` text NOT NULL, PRIMARY KEY (`id`), KEY `type` (`type`), KEY `date_create` (`date_create`), KEY `date_update` (`date_update`), KEY `state` (`state`))
SELECT					*				FROM					" . Config::Get('db.table.favourite_tag') . 
CREATE TABLE IF NOT EXISTS `prefix_user_field` ( `id` int(11) unsigned NOT NULL, `type` varchar(50) NOT NULL, `name` varchar(255) NOT NULL, `title` varchar(255) NOT NULL, `pattern` varchar(255) DEFAULT NULL)
SELECT * FROM prefix_topic WHERE topic_slug = '{$sUrl}' 
SELECT *				FROM " . Config::Get('db.table.favourite') . 
SELECT				topic_tag_text					 			FROM 				" . Config::Get('db.table.topic_tag') . 
SELECT * FROM " . Config::Get('db.table.subscribe') . " WHERE target_type = ? and mail = ?
SELECT comment_id FROM " . Config::Get('db.table.comment') . 
CREATE TABLE IF NOT EXISTS `prefix_topic_tag` ( `topic_tag_id` int(11) unsigned NOT NULL, `topic_id` int(11) unsigned NOT NULL, `user_id` int(11) unsigned NOT NULL, `blog_id` int(11) unsigned NOT NULL, `topic_tag_text` varchar(50) NOT NULL)
CREATE TABLE IF NOT EXISTS `prefix_session` ( `session_key` varchar(32) NOT NULL, `user_id` int(11) unsigned NOT NULL, `session_ip_create` varchar(40) NOT NULL, `session_ip_last` varchar(40) NOT NULL, `session_date_create` datetime DEFAULT NULL, `session_date_last` datetime NOT NULL, `session_date_close` datetime DEFAULT NULL, `session_extra` text)
SELECT					comment_id								FROM 					" . Config::Get('db.table.comment') . 
SELECT blog_id FROM " . Config::Get('db.table.blog') . " WHERE user_owner_id = ?d and blog_type='personal'
CREATE TABLE IF NOT EXISTS `prefix_category` ( `id` int(11) NOT NULL AUTO_INCREMENT, `pid` int(11) DEFAULT NULL, `type_id` int(11) NOT NULL, `title` varchar(250) NOT NULL, `description` text NOT NULL, `url` varchar(250) NOT NULL, `url_full` varchar(250) NOT NULL, `date_create` datetime NOT NULL, `order` int(11) NOT NULL, `state` tinyint(1) NOT NULL DEFAULT '1', PRIMARY KEY (`id`), KEY `pid` (`pid`), KEY `title` (`title`), KEY `order` (`order`), KEY `state` (`state`), KEY `url` (`url`), KEY `url_full` (`url_full`), KEY `type_id` (`type_id`))
SELECT * FROM " . Config::Get('db.table.user_changemail') . " WHERE code_from = ? 
CREATE TABLE IF NOT EXISTS `prefix_property_target` ( `id` int(11) unsigned NOT NULL, `type` varchar(50) NOT NULL, `date_create` datetime NOT NULL, `date_update` datetime DEFAULT NULL, `state` tinyint(4) NOT NULL DEFAULT '1', `params` text)
CREATE TABLE IF NOT EXISTS `prefix_blog_category` ( `id` int(11) NOT NULL AUTO_INCREMENT, `pid` int(11) DEFAULT NULL, `title` varchar(200) NOT NULL, `url` varchar(100) NOT NULL, `url_full` varchar(200) NOT NULL, `sort` int(11) NOT NULL DEFAULT '0', `count_blogs` int(11) NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `pid` (`pid`), KEY `count_blogs` (`count_blogs`), KEY `title` (`title`), KEY `url` (`url`), KEY `url_full` (`url_full`), KEY `sort` (`sort`))
