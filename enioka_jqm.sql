UPDATE __T__NODE SET LOAD_API_CLIENT=false, LOAD_API_ADMIN=false WHERE ID=?
UPDATE __T__JOB_INSTANCE SET INSTRUCTION=PAUSE  WHERE ID=? AND STATUS IN (RUNNING, HOLDED, SUBMITTED, ATTRIBUTED, SCHEDULED)
SELECT COUNT(ji) FROM __T__JOB_INSTANCE ji WHERE ji.INTERNAL_POSITION < ? AND ji.status = 'SUBMITTED' AND QUEUE=?
CREATE INDEX IDX_FK_JIP_1 ON __T__JOB_INSTANCE_PARAMETER(JOB_INSTANCE);
UPDATE __T__QUEUE_NODE_MAPPING SET ENABLED=?, LAST_MODIFIED=CURRENT_TIMESTAMP, MAX_THREAD=?, POLLING_INTERVAL=?, NODE=?, QUEUE=?  WHERE ID=? 
CREATE TABLE IF NOT EXISTS __T__JQM_SEQUENCE(	name VARCHAR(50) NOT NULL UNIQUE PRIMARY KEY,	next INTEGER NOT NULL)
SELECT ID, NAME, ROLE FROM __T__RPERMISSION WHERE ROLE IN(UNNEST(?))
SELECT ID, NAME, AUTH, TYPE, FACTORY, DESCRIPTION, TEMPLATE, SINGLETON, LAST_MODIFIED FROM __T__JNDI_OBJECT_RESOURCE
UPDATE __T__JOB_INSTANCE SET STATUS=HOLDED  WHERE ID=? AND STATUS=SUBMITTED
SELECT COUNT(1) FROM __T__HISTORY
SELECT COUNT(1) FROM __T__HISTORY WHERE STATUS='ENDED'
SELECT COUNT(1) FROM __T__JOB_INSTANCE WHERE NODE=?
UPDATE __T__JOB_INSTANCE SET INSTRUCTION=RUN  WHERE ID=? AND INSTRUCTION = PAUSE
SELECT COUNT(1) FROM __T__JOB_INSTANCE j3 WHERE j3.STATUS IN('ATTRIBUTED', 'RUNNING') AND j3.JOBDEF=j2.JOBDEF)=0 )) ORDER BY PRIORITY DESC, INTERNAL_POSITION FETCH FIRST ? ROWS ONLY)"));
SELECT ID, DEFAULT_QUEUE, DESCRIPTION, NAME FROM __T__QUEUE
UPDATE __T__RUSER SET LOGIN=?, LOCKED=?, EXPIRATION_DATE=?, LAST_MODIFIED=CURRENT_TIMESTAMP, EMAIL=?, FREETEXT=?  WHERE ID=? 
UPDATE __T__JOB_DEFINITION SET ENABLED=?  WHERE ID=?
update pg_database set datallowconn = false  where datname = jqm
SELECT ID, DEFAULT_QUEUE, DESCRIPTION, NAME FROM __T__QUEUE WHERE DEFAULT_QUEUE=true
SELECT ID, JOB_INSTANCE, KEYNAME, VALUE FROM __T__JOB_INSTANCE_PARAMETER WHERE JOB_INSTANCE=?
SELECT ID, ENABLED, LAST_MODIFIED, MAX_THREAD, POLLING_INTERVAL, NODE, QUEUE FROM __T__QUEUE_NODE_MAPPING WHERE NODE=?
CREATE INDEX IDX_FK_DELIVERABLE_1 ON __T__DELIVERABLE(JOB_INSTANCE);
SELECT ID, EVENT_TYPE, CLASS_NAME, CL FROM __T__CL_HANDLER 
UPDATE __T__RROLE SET NAME=?, DESCRIPTION=?  WHERE ID=? 
CREATE INDEX IDX_FK_QUEUE_NODE_MAPPING_1 ON __T__QUEUE_NODE_MAPPING(NODE);
UPDATE __T__JOB_DEFINITION SET EXTERNAL=true  WHERE ID=?
SELECT ID, CRON_EXPRESSION, JOBDEF, QUEUE, PRIORITY, LAST_UPDATED FROM __T__JOB_SCHEDULE WHERE ID=? 
SELECT ID, JOB_INSTANCE, TEXT_MESSAGE FROM __T__MESSAGE
SELECT ID, KEYNAME, VALUE, LAST_MODIFIED FROM __T__GLOBAL_PARAMETER
CREATE INDEX IDX_FK_JOB_SCHEDULE_2 ON __T__JOB_SCHEDULE(QUEUE);
CREATE INDEX IDX_FK_MESSAGE_1 ON __T__MESSAGE(JOB_INSTANCE);
CREATE INDEX IDX_FK_JOB_DEFINITION_PRM_1 ON __T__JOB_DEFINITION_PARAMETER(JOBDEF);
CREATE INDEX IDX_FK_JOBDEF_1 ON __T__JOB_DEFINITION(QUEUE);
UPDATE __T__JOB_INSTANCE SET STATUS=SCHEDULED, DATE_NOT_BEFORE=?  WHERE ID=? AND STATUS IN(SCHEDULED, SUBMITTED)
SELECT ID, NAME, CHILD_FIRST, HIDDEN_CLASSES, TRACING, PERSISTENT, ALLOWED_RUNNERS FROM __T__CL 
SELECT COUNT(1) FROM __T__GLOBAL_PARAMETER WHERE LAST_MODIFIED > ? AND KEYNAME IN('disableWsApi', 'enableWsApiSsl', 'enableInternalPki', 'pfxPassword', 'enableWsApiAuth')
UPDATE __T__QUEUE SET DEFAULT_QUEUE=?, DESCRIPTION=?, NAME=?  WHERE ID=?
UPDATE __T__NODE SET LAST_SEEN_ALIVE=CURRENT_TIMESTAMP  WHERE ID=?
UPDATE __T__JOB_INSTANCE SET INSTRUCTION=KILL  WHERE ID=?
select 1 from sysibm.sysdummy1
UPDATE __T__JOB_INSTANCE SET STATUS=SUBMITTED  WHERE STATUS=SCHEDULED
UPDATE __T__JOB_INSTANCE SET STATUS=?  WHERE ID=?
SELECT COUNT(1) FROM __T__HISTORY WHERE QUEUE=? AND NODE=?
UPDATE __T__JOB_INSTANCE SET INTERNAL_POSITION=?  WHERE ID=? AND STATUS=SUBMITTED
SELECT COUNT(1) FROM __T__HISTORY) ,";
SELECT ID, NAME, DESCRIPTION FROM __T__RROLE r WHERE NAME=?
SELECT * FROM (%s) WHERE rn BETWEEN ? AND ?
SELECT COUNT(1) FROM __T__JOB_INSTANCE) ,";
SELECT JD_APPLICATION, JD_KEY, EMAIL, INSTANCE_KEYWORD1, INSTANCE_KEYWORD2, INSTANCE_KEYWORD3, INSTANCE_MODULE, PARENT, SESSION_KEY, USERNAME, STATUS FROM __T__HISTORY WHERE ID=?
CREATE INDEX IDX_FK_RROLE_RUSER_2 ON __T__RROLE_RUSER(ACCOUNT);
SELECT SYSDATE FROM DUAL
UPDATE __T__RUSER SET PASSWORD=?, HASHSALT=?  WHERE ID=?
UPDATE __T__QUEUE SET DEFAULT_QUEUE=?, DESCRIPTION=?, NAME=?  WHERE ID=? 
SELECT COUNT(1) FROM __T__JOB_INSTANCE WHERE JOBDEF=?
UPDATE __T__JOB_INSTANCE SET QUEUE=?  WHERE ID=? AND STATUS IN(SUBMITTED, HOLDED, SCHEDULED)
SELECT * FROM ( SELECT /*+ FIRST_ROWS */ a.*, ROWNUM rnum FROM (%s) a WHERE ROWNUM < ?) WHERE RNUM >= ?
UPDATE __T__JNDI_OBJECT_RESOURCE SET AUTH=?, DESCRIPTION=?, FACTORY=?, LAST_MODIFIED=CURRENT_TIMESTAMP, NAME=?, SINGLETON=?, TEMPLATE=?, TYPE=?  WHERE ID=? 
SELECT COUNT(1) FROM __T__RUSER WHERE LOGIN=?
UPDATE __T__QUEUE_NODE_MAPPING SET ENABLED=?  WHERE QUEUE=?
SELECT STATUS FROM __T__HISTORY WHERE ID=?
UPDATE __T__NODE SET PORT=?  WHERE ID=?
SELECT ID, JOB_INSTANCE, KEYNAME, VALUE FROM __T__JOB_INSTANCE_PARAMETER WHERE JOB_INSTANCE IN(UNNEST(?))
CREATE INDEX IDX_FK_HISTORY_1 ON __T__HISTORY(JOBDEF);
SELECT ID, KEYNAME, VALUE, JOBDEF FROM __T__JOB_DEFINITION_PARAMETER WHERE JOBDEF IN(UNNEST(?))
SELECT COUNT(1) FROM __T__JOB_INSTANCE WHERE QUEUE=?
SELECT ID, CRON_EXPRESSION, JOBDEF, QUEUE, PRIORITY, LAST_UPDATED FROM __T__JOB_SCHEDULE WHERE LAST_UPDATED > ?
SELECT ID, KEYNAME, VALUE, JOB_SCHEDULE FROM __T__JOB_SCHEDULE_PARAMETER 
UPDATE __T__NODE SET ROOT_LOG_LEVEL=?) WHERE ID=? 
UPDATE __T__QUEUE SET DEFAULT_QUEUE=false WHERE ID=?
UPDATE __T__JOB_SCHEDULE SET PRIORITY=?, LAST_UPDATED=CURRENT_TIMESTAMP  WHERE ID=?
SELECT PRIORITY FROM __T__JOB_INSTANCE WHERE ID=?
CREATE INDEX IDX_FK_RROLE_RUSER_1 ON __T__RROLE_RUSER(
SELECT e from Entity e
UPDATE __T__JOB_INSTANCE SET PROGRESS=?  WHERE ID=?
SELECT ID FROM __T__RUSER WHERE LOGIN=?
CREATE INDEX IDX_FK_QUEUE_NODE_MAPPING_2 ON __T__QUEUE_NODE_MAPPING(QUEUE);
SELECT * FROM (SELECT a.*, ROW_NUMBER() OVER() AS rn FROM (%s) a) WHERE rn BETWEEN ? AND ?
SELECT ENABLED, MAX_THREAD FROM __T__QUEUE_NODE_MAPPING WHERE QUEUE=?
UPDATE __T__JNDI_OR_PARAMETER SET VALUE=?, LAST_MODIFIED=CURRENT_TIMESTAMP  WHERE KEYNAME=?
SELECT ID, LOGIN, PASSWORD, HASHSALT, LOCKED, EXPIRATION_DATE, CREATION_DATE, LAST_MODIFIED, EMAIL, FREETEXT, INTERNAL FROM __T__RUSER u RIGHT JOIN __T__RROLE_RUSER a ON a.USER = u.ID WHERE a.ROLE=?
SELECT count(1) FROM INFORMATION_SCHEMA.COLUMNS
SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS
UPDATE __T__CL SET NAME=?, CHILD_FIRST=?, HIDDEN_CLASSES=?, TRACING=?, PERSISTENT=?, ALLOWED_RUNNERS=?  WHERE ID=?
UPDATE __T__NODE SET LOAD_API_SIMPLE=true, LOAD_API_CLIENT=true, LOAD_API_ADMIN=true, DNS=0 WHERE ID=?
CREATE INDEX IDX_FK_HISTORY_2 ON __T__HISTORY(NODE);
CREATE INDEX IDX_JOB_SCHEDULE_1 ON __T__JOB_SCHEDULE(LAST_UPDATED);
CREATE INDEX IDX_FK_HISTORY_3 ON __T__HISTORY(QUEUE);
SELECT ID, FILE_FAMILY, PATH, JOB_INSTANCE, ORIGINAL_FILE_NAME, RANDOM_ID FROM __T__DELIVERABLE
UPDATE __T__JOB_INSTANCE SET DATE_START=CURRENT_TIMESTAMP, STATUS=RUNNING  WHERE ID=? 
CREATE INDEX IDX_FK_CL_HANDLER_1 ON __T__CL_HANDLER(CL);
CREATE INDEX IDX_FK_CL_HANDLER_PARAMETER_1 ON __T__CL_HANDLER_PARAMETER(CL_HANDLER);
CREATE INDEX IDX_JOB_INSTANCE_4 ON __T__JOB_INSTANCE(NODE);
SELECT ID, KEYNAME, VALUE, CL_HANDLER FROM __T__CL_HANDLER_PARAMETER 
UPDATE __T__JOB_INSTANCE SET STATUS=CANCELLED  WHERE ID=? 
SELECT ID, KEYNAME, VALUE, JOBDEF FROM __T__JOB_DEFINITION_PARAMETER WHERE JOBDEF=?
UPDATE __T__JOB_SCHEDULE SET CRON_EXPRESSION=?, LAST_UPDATED=CURRENT_TIMESTAMP  WHERE ID=?
SELECT COUNT(1) FROM __T__RROLE_RUSER WHERE ROLE=?
SELECT ID, DEFAULT_QUEUE, DESCRIPTION, NAME FROM __T__QUEUE WHERE ID=?
UPDATE __T__JOB_INSTANCE SET NODE=?  WHERE ID=?
CREATE INDEX IDX_JOB_INSTANCE_3 ON __T__JOB_INSTANCE(JOBDEF);
SELECT COUNT(1) FROM __T__QUEUE_NODE_MAPPING WHERE NODE=?
UPDATE __T__NODE SET LAST_SEEN_ALIVE=NULL, STOP=false  WHERE ID=?
CREATE INDEX IDX_FK_JNDI_OR_PARAMETER_1 ON __T__JNDI_OR_PARAMETER(JNDI_OR);
CREATE INDEX IDX_FK_JOB_SCHEDULE_1 ON __T__JOB_SCHEDULE(JOBDEF);
UPDATE __T__WITNESS SET NODE=?, LATEST_CONTACT=CURRENT_TIMESTAMP  WHERE KEYNAME=SCHEDULER
SELECT COUNT(1) FROM __T__JOB_INSTANCE j3 WHERE j3.STATUS IN('ATTRIBUTED', 'RUNNING') AND j3.JOBDEF=j2.JOBDEF)=0 )) ORDER BY PRIORITY DESC, INTERNAL_POSITION FOR UPDATE LIMIT ?)");
CREATE INDEX IDX_FK_JOB_SCHEDULE_PRM_1 ON __T__JOB_SCHEDULE_PARAMETER(JOB_SCHEDULE);
UPDATE __T__JOB_INSTANCE SET STATUS=SUBMITTED  WHERE ID=? AND STATUS=HOLDED
select pg_terminate_backend(pid) from pg_stat_activity where datname='jqm';
UPDATE __T__JOB_SCHEDULE SET CRON_EXPRESSION=?, QUEUE=?, PRIORITY=?, LAST_UPDATED=CURRENT_TIMESTAMP  WHERE ID=?
SELECT ID, ENABLED, LAST_MODIFIED, MAX_THREAD, POLLING_INTERVAL, NODE, QUEUE FROM __T__QUEUE_NODE_MAPPING WHERE ID=?
SELECT DATE_START FROM __T__JOB_INSTANCE WHERE ID=?
SELECT COUNT(1) FROM __T__JOB_INSTANCE
CREATE INDEX IDX_JOB_INSTANCE_5 ON __T__JOB_INSTANCE(QUEUE);
UPDATE __T__QUEUE_NODE_MAPPING SET POLLING_INTERVAL=?  WHERE ID=?
CREATE INDEX IDX_FK_JOBDEF_2 ON __T__JOB_DEFINITION(CL);
SELECT ID FROM __T__JOB_INSTANCE WHERE JOBDEF=? AND STATUS='SUBMITTED'
SELECT ID, PEM_CERT, PEM_PK, PRETTY_NAME FROM __T__PKI WHERE PRETTY_NAME=?
SELECT ID, CRON_EXPRESSION, JOBDEF, QUEUE, PRIORITY, LAST_UPDATED FROM __T__JOB_SCHEDULE WHERE JOBDEF IN(UNNEST(?)) ORDER BY ID
SELECT ID, KEYNAME, LAST_MODIFIED, VALUE, JNDI_OR FROM __T__JNDI_OR_PARAMETER WHERE JNDI_OR IN(UNNEST(?))
SELECT ID, KEYNAME, VALUE, JOBDEF FROM __T__JOB_DEFINITION_PARAMETER ORDER BY JOBDEF
SELECT ID, LOGIN, PASSWORD, HASHSALT, LOCKED, EXPIRATION_DATE, CREATION_DATE, LAST_MODIFIED, EMAIL, FREETEXT, INTERNAL FROM __T__RUSER 
UPDATE __T__NODE SET STOP=true  WHERE ID=?
SELECT ID, CRON_EXPRESSION, JOBDEF, QUEUE, PRIORITY, LAST_UPDATED FROM __T__JOB_SCHEDULE ORDER BY ID 
UPDATE __T__RUSER SET LOCKED=false  WHERE ID=?
SELECT COUNT(1) FROM __T__JOB_INSTANCE WHERE STATUS='RUNNING'
SELECT QUEUE, INTERNAL_POSITION FROM __T__JOB_INSTANCE WHERE ID=? AND STATUS='SUBMITTED'
SELECT COUNT(1) FROM __T__QUEUE
UPDATE __T__JOB_DEFINITION SET QUEUE=?  WHERE JD_KEY=?
SELECT ID, DEFAULT_QUEUE, DESCRIPTION, NAME FROM __T__QUEUE WHERE NAME=?
SELECT ID, NAME, ROLE FROM __T__RPERMISSION WHERE ROLE=?
CREATE INDEX IDX_JOB_INSTANCE_2 ON __T__JOB_INSTANCE(JOBDEF, STATUS);
SELECT ID, KEYNAME, LAST_MODIFIED, VALUE FROM __T__JNDI_OR_PARAMETER WHERE JNDI_OR=?
SELECT COUNT(1) FROM __T__JNDI_OBJECT_RESOURCE WHERE NAME=?
SELECT COUNT(1) FROM __T__HISTORY WHERE STATUS<>'ENDED'
SELECT INSTRUCTION FROM __T__JOB_INSTANCE WHERE ID=?
UPDATE __T__JOB_INSTANCE SET PRIORITY=?  WHERE ID=?
UPDATE __T__QUEUE_NODE_MAPPING SET MAX_THREAD=?  WHERE ID=?
UPDATE __T__JOB_SCHEDULE SET QUEUE=?, LAST_UPDATED=CURRENT_TIMESTAMP  WHERE ID=?
CREATE INDEX IDX_JOB_INSTANCE_1 ON __T__JOB_INSTANCE(QUEUE, STATUS);
UPDATE __T__JNDI_OR_PARAMETER SET VALUE=?, LAST_MODIFIED=CURRENT_TIMESTAMP  WHERE JNDI_OR=? AND KEYNAME=? 
SELECT COUNT(1) FROM __T__MESSAGE
SELECT COUNT(1) FROM __T__JNDI_OBJECT_RESOURCE r RIGHT JOIN __T__JNDI_OR_PARAMETER p ON p.JNDI_OR = r.ID WHERE r.LAST_MODIFIED > ? OR p.LAST_MODIFIED > ?
SELECT DNS, PORT FROM __T__NODE WHERE NAME=?
SELECT ID, CRON_EXPRESSION, JOBDEF, QUEUE, PRIORITY, LAST_UPDATED FROM __T__JOB_SCHEDULE WHERE JOBDEF = ?
UPDATE __T__GLOBAL_PARAMETER SET VALUE=?  WHERE KEYNAME=?
CREATE INDEX IDX_FK_RPERMISSION_1 ON __T__RPERMISSION(
UPDATE __T__JOB_DEFINITION SET APPLICATION=?, JD_KEY=? WHERE ID=?
UPDATE __T__NODE SET JMX_REGISTRY_PORT=?, JMX_SERVER_PORT=?  WHERE ID=?
SELECT COUNT(1) FROM __T__HISTORY WHERE %s) ,", wh);
