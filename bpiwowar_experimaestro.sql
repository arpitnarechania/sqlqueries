CREATE TABLE IF NOT EXISTS Tag ( task_id INTEGER NOT NULL REFERENCES Task(id), key VARCHAR(255) NOT NULL, value JSON NOT NULL, CONSTRAINT tag_reference PRIMARY KEY(task_id, key) )
CREATE TABLE IF NOT EXISTS LockedToken ( token_id INTEGER NOT NULL REFERENCES Token(id), task_id INTEGER NOT NULL REFERENCES Task(id), value INTEGER NOT NULL, CONSTRAINT unique_lockedtoken UNIQUE(token_id, task_id) )
SELECT Value FROM Config WHERE key='version'
CREATE TABLE IF NOT EXISTS Auth ( token VARCHAR(255) PRIMARY KEY, validity DATETIME NOT NULL )
CREATE TABLE layer_info (layer_uuid TEXT, name TEXT, value BLOB, UNIQUE (layer_uuid, name) ON CONFLICT REPLACE)
CREATE TABLE IF NOT EXISTS Token ( id INTEGER NOT NULL PRIMARY KEY, key VARCHAR(255) NOT NULL, capacity int NOT NULL, value int NOT NULL, CONSTRAINT unique_token UNIQUE(key) )
CREATE TABLE IF NOT EXISTS Task ( id INTEGER PRIMARY KEY, experiment_id INTEGER NOT NULL, CONSTRAINT valid_experiment FOREIGN KEY (experiment_id) REFERENCES Experiment(id) )
CREATE TABLE IF NOT EXISTS Experiment ( id INTEGER PRIMARY KEY, name VARCHAR(255) NOT NULL, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT unique_experiment UNIQUE(name, timestamp) )
